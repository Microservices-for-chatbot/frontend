name: CI/CD Pipeline for frontend

on:
  push:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # --- LINTING STEPS ---
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install linting dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      
      - name: Run Flake8 and pass for demonstration
        run: flake8 app_frontend.py || true

      # --- CODEQL ANALYSIS STEPS ---
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      # --- UNIT TESTING STEPS ---
      - name: Install testing dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest
      
      - name: Run tests and pass for demonstration
        run: pytest || true

  build-and-push:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${{ github.sha }}
          file: ./Dockerfile

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${{ github.sha }}
          format: table
          exit-code: 0

  deploy:
    runs-on: self-hosted
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy with Helm
        run: |
          helm upgrade --install frontend-release ./Helm-chart \
            --set image.tag=${{ github.sha }}
